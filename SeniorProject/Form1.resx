<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAkACQAAD/4QAiRXhpZgAATU0AKgAAAAgAAQESAAMAAAABAAEAAAAAAAD/2wBD
        AAYEBQYFBAYGBQYHBwYIChAKCgkJChQODwwQFxQYGBcUFhYaHSUfGhsjHBYWICwgIyYnKSopGR8tMC0o
        MCUoKSj/2wBDAQcHBwoIChMKChMoGhYaKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgo
        KCgoKCgoKCgoKCgoKCj/wAARCACFAPoDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQF
        BgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAk
        M2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWG
        h4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx
        8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQA
        AQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5
        OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmq
        srO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD5
        UooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiig
        AooooAKKKKACiiigAooooAKKKKACiiigApQMmkq3pP8AyFLP/rsn/oQoAqkYoxX6jW9hZm3j/wBEt/uj
        /lmPT6VJ/Z9n/wA+lv8A9+l/woA/LXFGK/Ur+z7P/n0t/wDv0v8AhR/Z9n/z6W//AH6X/CgD8tcUYr9S
        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
        8EXK6g1p9qgLrd3FnuAON0MYcn6EHArmfttxmU+dJmVQsh3H5wCCAfXkD8hU8es6jFOs8d9dLMsjTLIs
        pDB2GC2c9SOpoA2tN8IS32n6Pcrdwxvqd99ijib7ynKjcec4+YdBTZvCcsWjremYuzIJSiREqsZlMYLN
        nj5h0we2axpNVvpJo5pLy4aWKQyo5kJKOSCWB7HIHPtS/wBr6gLFrMXtyLRm3GHzTsJznOM4680Adavw
        5uH1rWNNj1C3MumwNLI2OHIzlRgnnj6+1cIww2K0pNf1WW5NxLqN49wduZWmYsdpyvOc8HkVmuxZiTyT
        1oAQDJrrT4JuY5AJrq2Vf3pyrA8IiMe/Gd44OOlckDirsWq30UnmRXdwj5J3LIQckAH8wB+VAG5a+EJr
        nTNPvEu4Qt7dJbIjDkFnZQT/AN8k0mi+En1i6022tLpPOvXkTDRnEYjGWJI6/hWEuo3a4xczDDBxhzww
        JIP1ySfxpiXk6LtSaRVwRgMQMHr+eBQB01p4IuriTToWuI47i8mSEIUYiPdM0QLH/eU8envxWXb6Gbjx
        CNKjuE3FynmnAXgZPf29aqrrepLGEW/uwgl84KJWwHznd1655zUX9o3hvRdm6nN0DkTbzvB+vWgDorrw
        Tc2+malem5hZLKVoio6vgRnI56HzF6Zq8fhrqiawdNllhjujbxTorA/PvbaUH+0p3A+u046iuRbU7x2c
        vd3DF2LMTITuJxkn8h+QoGqXok8wXdwJA28N5hzu3bs59c8/WgDci8IO9tazNewxiYpu3qQEDGQA56f8
        sz6dR74w9Z0+TS9Sns5Tl4mxnGMjqD+IwaUavqASBBe3IWA7ol804jPqPTqfzqtdXE13cPPcyvLM5yzu
        2WY+5oAhooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKK
        KACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKK
        KACiiigAooooAKKKKACiiigD/9k=
</value>
  </data>
</root>